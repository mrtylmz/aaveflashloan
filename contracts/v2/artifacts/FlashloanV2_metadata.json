{
	"compiler": {
		"version": "0.6.12+commit.27d51765"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_addressProvider",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "_from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "_assetAddress",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "LogWithdraw",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "ADDRESSES_PROVIDER",
				"outputs": [
					{
						"internalType": "contract ILendingPoolAddressesProviderV2",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "LENDING_POOL",
				"outputs": [
					{
						"internalType": "contract ILendingPoolV2",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address[]",
						"name": "assets",
						"type": "address[]"
					},
					{
						"internalType": "uint256[]",
						"name": "amounts",
						"type": "uint256[]"
					},
					{
						"internalType": "uint256[]",
						"name": "premiums",
						"type": "uint256[]"
					},
					{
						"internalType": "address",
						"name": "initiator",
						"type": "address"
					},
					{
						"internalType": "bytes",
						"name": "params",
						"type": "bytes"
					}
				],
				"name": "executeOperation",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_asset",
						"type": "address"
					}
				],
				"name": "flashloan",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address[]",
						"name": "assets",
						"type": "address[]"
					},
					{
						"internalType": "uint256[]",
						"name": "amounts",
						"type": "uint256[]"
					}
				],
				"name": "flashloan",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_assetAddress",
						"type": "address"
					}
				],
				"name": "withdraw",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"stateMutability": "payable",
				"type": "receive"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"executeOperation(address[],uint256[],uint256[],address,bytes)": {
					"details": "This function must be called only be the LENDING_POOL and takes care of repaying active debt positions, migrating collateral and incurring new V2 debt token debt.",
					"params": {
						"amounts": "The array of flash loaned asset amounts used to repay debts.",
						"assets": "The array of flash loaned assets used to repay debts.",
						"initiator": "The address that initiated the flash loan, unused.",
						"params": "The byte array containing, in this case, the arrays of aTokens and aTokenAmounts.",
						"premiums": "The array of premiums incurred as additional debts."
					}
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				},
				"withdraw(address)": {
					"details": "Withdraw asset.",
					"params": {
						"_assetAddress": "Asset to be withdrawn."
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/v2/FlashloanV2.sol": "FlashloanV2"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/utils/Withdrawable.sol": {
			"keccak256": "0x3a337ddf27b1cf5c13569b434ac9c0b419267a01762e9d276a7f290a1e383405",
			"urls": [
				"bzz-raw://e11bd48217ffb5575295337634214dcb90ecfb9aafdaa1233d709e7e035e2eb1",
				"dweb:/ipfs/QmUixgYNb5xVCQCJRdBF7wEetUQ2U6eP3CmgcyZ7EZT9RL"
			]
		},
		"contracts/v2/FlashloanV2.sol": {
			"keccak256": "0x9a7ee6c53308c1fbb6f68f9be6185b83b4677c1fd0f334b73dca58cddff36374",
			"urls": [
				"bzz-raw://f547da785bf1a308089fcf17b6fff49a3dd67a33a810e9ee47343a3961aa2212",
				"dweb:/ipfs/QmThK1aZefHjuV6JrbUhtdbZSC4MehMHKWyQqb7QSaYbtx"
			]
		},
		"contracts/v2/aave/FlashLoanReceiverBaseV2.sol": {
			"keccak256": "0x9a0aca5723b503aac416af3050c23e593b58b0907bd3aa0bb03d4b43c7836c72",
			"license": "agpl-3.0",
			"urls": [
				"bzz-raw://089fd2af280a8c2790ed76ca72a4bc6a65e93dfea23ab66664592135c65cfc31",
				"dweb:/ipfs/Qmdd5fGFgs3zsYoM9w3dBCxJGQ5u69LUcReicXwVWmw89n"
			]
		},
		"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.3/contracts/GSN/Context.sol": {
			"keccak256": "0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0",
			"license": "MIT",
			"urls": [
				"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f",
				"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96"
			]
		},
		"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.3/contracts/access/Ownable.sol": {
			"keccak256": "0xf7c39c7e6d06ed3bda90cfefbcbf2ddc32c599c3d6721746546ad64946efccaa",
			"license": "MIT",
			"urls": [
				"bzz-raw://cb57a28e189cd8b05748db44bdd51d608e6f1364dd1b35ad921e1bc82c10631e",
				"dweb:/ipfs/QmaWWTBbVu2pRR9XUbE4iC159NoP59cRF9ZJwhf4ghFN9i"
			]
		},
		"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.3/contracts/math/SafeMath.sol": {
			"keccak256": "0x3b21f2c8d626de3b9925ae33e972d8bf5c8b1bffb3f4ee94daeed7d0679036e6",
			"license": "MIT",
			"urls": [
				"bzz-raw://7f8d45329fecbf0836ad7543330c3ecd0f8d0ffa42d4016278c3eb2215fdcdfe",
				"dweb:/ipfs/QmXWLT7GcnHtA5NiD6MFi2CV3EWJY4wv5mLNnypqYDrxL3"
			]
		},
		"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.3/contracts/token/ERC20/ERC20.sol": {
			"keccak256": "0xcbd85c86627a47fd939f1f4ee3ba626575ff2a182e1804b29f5136394449b538",
			"license": "MIT",
			"urls": [
				"bzz-raw://53c6a80c519bb9356aad28efa9a1ec31603860eb759d2dc57f545fcae1dd1aca",
				"dweb:/ipfs/QmfRS6TtMNUHhvgLHXK21qKNnpn2S7g2Yd1fKaHKyFiJsR"
			]
		},
		"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.3/contracts/token/ERC20/IERC20.sol": {
			"keccak256": "0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5",
			"license": "MIT",
			"urls": [
				"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08",
				"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC"
			]
		},
		"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.3/contracts/token/ERC20/SafeERC20.sol": {
			"keccak256": "0xf12dfbe97e6276980b83d2830bb0eb75e0cf4f3e626c2471137f82158ae6a0fc",
			"license": "MIT",
			"urls": [
				"bzz-raw://b3a849c2d95e85463909e5b5c920b13e7a11216ca14127085e16d22b9379d52a",
				"dweb:/ipfs/QmUg3CZDbCCcQdroEpexBy5ZFd5vD1UWijWQq9qHZjtJNQ"
			]
		},
		"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.3/contracts/utils/Address.sol": {
			"keccak256": "0xa6a15ddddcbf29d2922a1e0d4151b5d2d33da24b93cc9ebc12390e0d855532f8",
			"license": "MIT",
			"urls": [
				"bzz-raw://7c119bcaecfa853d564ac88d312777f75fa1126a3bca88a3371adb0ad9f35cb0",
				"dweb:/ipfs/QmY9UPuXeSKq86Zh38fE43VGQPhKMN34mkuFSFqPcr6nvZ"
			]
		},
		"interfaces/v2/IFlashLoanReceiverV2.sol": {
			"keccak256": "0x5a808a05b4720c79de6cd8de2dbbabfe4b624ef01ad49c05322ce02007e221d5",
			"license": "agpl-3.0",
			"urls": [
				"bzz-raw://7b1a198e146711c924252f5c5e3ce8bbf1f144ab3765ae2144cc1224a5694eea",
				"dweb:/ipfs/QmQmYy6iFcbZtKwHNVZowTWkGoacXZqtPyWsjt5VmYTPCL"
			]
		},
		"interfaces/v2/ILendingPoolAddressesProviderV2.sol": {
			"keccak256": "0xe262295f4d94b511387753624b3ffa29d9e9035480769e22e309be13185a77ff",
			"license": "agpl-3.0",
			"urls": [
				"bzz-raw://a31af325bd293e1443214ef93dfa923e30aa10efd644c2a735e6b2d74d8fdb33",
				"dweb:/ipfs/QmSxCtfbW2aMz1RC3Dfv4E9NMV1ic6eaY71QgK62KPSgfg"
			]
		},
		"interfaces/v2/ILendingPoolV2.sol": {
			"keccak256": "0x8498e43ef9521a2bf342f6a8e8d5b7050337f6ab074c4f75fe3c1da4c6c78116",
			"license": "agpl-3.0",
			"urls": [
				"bzz-raw://2b5264447391a001d5cb0a7320be756159fbc84493d1f11bdd33ff36ba957ff5",
				"dweb:/ipfs/QmXosDbwWvV6dZjbP8EShwXz67YszJsj8jwCMQPDveAHbR"
			]
		},
		"libraries/v2/DataTypes.sol": {
			"keccak256": "0xaf551714a6a05e7288fec583951adfe6a476be1cbda19b6d16d9e14991c5c2b5",
			"license": "agpl-3.0",
			"urls": [
				"bzz-raw://9782a968fa05e22d7a5a7695b6f53bd04c698fb78b3d0da9c2fa6bca9875ffb8",
				"dweb:/ipfs/QmaZKNEgMnbR2yzQhG8m5iSjDgdeDj9zyWVMW3whJy4sDb"
			]
		}
	},
	"version": 1
}